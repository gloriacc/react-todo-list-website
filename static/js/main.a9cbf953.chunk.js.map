{"version":3,"sources":["components/AddItem.tsx","redux/actions.tsx","components/Item.tsx","components/ItemList.tsx","components/filterOptions.tsx","components/FilterTabs.tsx","App.tsx","redux/reducers.tsx","redux/store.tsx","index.tsx"],"names":["AddItem","useState","todo","setTodo","dispatch","useDispatch","className","value","onChange","e","target","onClick","type","Item","props","done","id","text","ItemList","list","useSelector","state","items","filter","item","length","map","key","filterOptions","FilterTabs","tab","Object","entries","option","App","initState","store","createStore","action","assign","Math","random","ReactDOM","render","document","getElementById"],"mappings":"+QAIMA,EAAU,WAAO,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,KAEdC,EAAWC,cAKjB,OACE,yBAAKC,UAAU,WACb,2BAAOC,MAAOL,EAAMM,SAAU,SAACC,GAAD,OAAKN,EAAQM,EAAEC,OAAOH,UACpD,4BAAQI,QAAS,kBANnBP,ECHK,CACLQ,KANa,WAObL,MDCiBL,SACjBC,EAAQ,MAKN,cETAU,EAA0B,SAACC,GAC/B,IAAMV,EAAWC,cACjB,OACE,4BACE,yBAAKC,UAAWQ,EAAMC,KAAK,YAAY,YAClCJ,QAAS,kBAAIP,EDEf,CACLQ,KAZgB,cAahBL,MCJwCO,EAAME,OAAOF,EAAMG,QCLzDC,EAAW,WACf,IAAMC,EAAOC,aAAmC,SAAAC,GAAK,OACnDA,EAAMC,MAAMC,QAAO,SAAAC,GAAI,MAAqB,QAAjBH,EAAME,OACjCC,EAAyB,SAAjBH,EAAME,OAAoBC,EAAKT,MAAQS,EAAKT,WACtD,OACE,wBAAIT,UAAU,YACXa,EAAKM,OAAS,EAAIN,EAAKO,KAAI,SAACF,GAAD,OAC1B,kBAAC,EAAD,CAAMG,IAAKH,EAAKR,GAAIA,GAAIQ,EAAKR,GAAIC,KAAMO,EAAKP,KAAMF,KAAMS,EAAKT,UAAW,qDCZnEa,EAAgB,CAAC,MAAO,OAAQ,QCMvCC,EAAa,WACjB,IAAMC,EAAMV,aAA+B,SAAAC,GAAK,OAAIA,EAAME,UACpDnB,EAAWC,cACjB,OACE,wBAAIC,UAAU,cACXyB,OAAOC,QAAQJ,GAAeF,KAAI,SAAAO,GAAM,OACvC,wBAAI3B,UAAWwB,IAAQG,EAAO,GAAK,YAAc,GAC7CN,IAAKM,EAAO,GACZtB,QAAS,kBAAMP,EJKlB,CACLQ,KAlBe,aAmBfL,MIP0C0B,EAAO,OAC3CA,EAAO,SCTjB,SAASC,IACP,OACE,yBAAK5B,UAAU,OACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,mBCTF6B,EAAY,CAChBZ,OAAQ,MACRD,MAAO,ICFHc,EAAQC,aDKC,WAAuD,IAAtDhB,EAAqD,uDAAlCc,EAAWG,EAAuB,uCACnE,OAAQA,EAAO1B,MACb,INVa,WMWX,OAAOmB,OAAOQ,OAAO,GAAIlB,EAAO,CAC9BC,MAAM,CACJ,CACEN,GAAIwB,KAAKC,SACTxB,KAAMqB,EAAO/B,MACbQ,MAAM,IAJL,mBAMAM,EAAMC,UAGf,INpBgB,cMqBd,OAAOS,OAAOQ,OAAO,GAAIlB,EAAO,CAC9BC,MAAOD,EAAMC,MAAMI,KAAI,SAACF,GACtB,OAAIA,EAAKR,KAAOsB,EAAO/B,MACdwB,OAAOQ,OAAO,GAAIf,EAAM,CAC7BT,MAAOS,EAAKT,OAGTS,OAGb,IN9Be,aM+Bb,OAAOO,OAAOQ,OAAO,GAAIlB,EAAO,CAC9BE,OAAQe,EAAO/B,QAEnB,QACE,OAAOc,ME9BbqB,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAGFQ,SAASC,eAAe,W","file":"static/js/main.a9cbf953.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {addTodo} from '../redux/actions';\r\n\r\nconst AddItem = () => {\r\n  const [todo, setTodo] = useState('');\r\n  const dispatch = useDispatch();\r\n  const submit = () => {\r\n    dispatch(addTodo(todo));\r\n    setTodo('');\r\n  };\r\n  return (\r\n    <div className=\"addItem\">\r\n      <input value={todo} onChange={(e)=>setTodo(e.target.value)}/>\r\n      <button onClick={()=>submit()}>Add Todo</button>\r\n    </div>\r\n  )\r\n}\r\nexport {AddItem};","const ADD_TODO = 'ADD_TODO';\r\nconst TOGGLE_TODO = 'TOGGLE_TODO';\r\nconst SET_FILTER = 'SET_FILTER';\r\n\r\nconst addTodo = (text: string) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    value: text\r\n  }\r\n};\r\n\r\nconst toggleTodo = (id: number) => {\r\n  return {\r\n    type: TOGGLE_TODO,\r\n    value: id\r\n  }\r\n};\r\n\r\nconst setFilter = (filter: string) => {\r\n  return {\r\n    type: SET_FILTER,\r\n    value: filter\r\n  }\r\n};\r\n\r\nexport {ADD_TODO, TOGGLE_TODO, SET_FILTER, addTodo, toggleTodo, setFilter};","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {toggleTodo} from '../redux/actions';\r\nimport {ItemType} from '../type';\r\n\r\nconst Item:React.FC<ItemType> = (props) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <li>\r\n      <div className={props.done?'doneStyle':'todoStyle'}\r\n           onClick={()=>dispatch(toggleTodo(props.id))}>{props.text}</div>\r\n    </li>\r\n  )\r\n}\r\nexport {Item};","import React from 'react';\r\nimport {Item} from './Item';\r\nimport {useSelector} from 'react-redux';\r\nimport {ItemType, StateType} from '../type';\r\n\r\nconst ItemList = () => {\r\n  const list = useSelector<StateType, ItemType[]>(state =>\r\n    state.items.filter(item => state.filter === 'all' ?\r\n    item : (state.filter === 'done' ? item.done : !item.done)));\r\n  return (\r\n    <ul className=\"itemList\">\r\n      {list.length > 0 ? list.map((item) =>\r\n        <Item key={item.id} id={item.id} text={item.text} done={item.done}/>) : <div>Try to add a todo~</div>}\r\n    </ul>\r\n  )\r\n};\r\nexport {ItemList};","export const filterOptions = ['all', 'todo', 'done'];","import React from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setFilter} from '../redux/actions';\r\nimport {StateType} from '../type';\r\nimport {filterOptions} from './filterOptions';\r\n\r\nconst FilterTabs = () => {\r\n  const tab = useSelector<StateType, string>(state => state.filter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <ul className=\"filterTabs\">\r\n      {Object.entries(filterOptions).map(option =>\r\n        <li className={tab === option[1] ? 'activeTab' : ''}\r\n            key={option[0]}\r\n            onClick={() => dispatch(setFilter(option[1]))}\r\n        >{option[1]}</li>\r\n      )}\r\n    </ul>\r\n  )\r\n};\r\nexport {FilterTabs};","import React from 'react';\nimport './App.scss';\nimport {AddItem} from './components/AddItem';\nimport {ItemList} from './components/ItemList';\nimport {FilterTabs} from './components/FilterTabs';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <AddItem/>\n        <FilterTabs/>\n        <ItemList/>\n      </div>\n    </div>\n  );\n}\nexport {App};\n","import {ADD_TODO, TOGGLE_TODO, SET_FILTER} from './actions';\r\nimport {StateType, ActionType} from '../type';\r\n\r\nconst initState = {\r\n  filter: 'all',\r\n  items: []\r\n};\r\n\r\nconst todoApp =(state: StateType = initState, action: ActionType) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return Object.assign({}, state, {\r\n        items: [\r\n          {\r\n            id: Math.random(),\r\n            text: action.value,\r\n            done: false\r\n          },\r\n          ...state.items\r\n        ]\r\n      });\r\n    case TOGGLE_TODO:\r\n      return Object.assign({}, state, {\r\n        items: state.items.map((item) => {\r\n          if (item.id === action.value) {\r\n            return Object.assign({}, item, {\r\n              done: !item.done\r\n            })\r\n          }\r\n          return item;\r\n        })\r\n      });\r\n    case SET_FILTER:\r\n      return Object.assign({}, state, {\r\n        filter: action.value\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport {todoApp};","import {createStore} from 'redux';\r\nimport {todoApp} from './reducers';\r\n\r\nconst store = createStore(todoApp);\r\nexport {store};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n,\n  document.getElementById('root')\n);"],"sourceRoot":""}